buildscript {
    def mavenRepoUrl = System.getProperty("mavenRepoUrl")
    if (mavenRepoUrl == null) {
        mavenRepoUrl = System.getenv("mavenRepoUrl")
    }
    if (mavenRepoUrl == null) {
        mavenRepoUrl = MAVEN_REPO_URL
    }
    println("mavenRepoUrl=" + mavenRepoUrl)
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url mavenRepoUrl }
    }

    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.2"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.2.50"
        classpath "org.jetbrains.kotlin:kotlin-allopen:1.2.10"
    }

    ext {
        bouncyCastleVersion = "1.46"
        svnkitVersion = "1.9.3"
        commonExecVersion = "1.3"
        jacksonVersion = "2.9.2"
    }
}
configurations {
    ktlint
}
//plugins {
//    id 'org.jetbrains.kotlin.jvm' version '1.3.0'
//}
apply plugin: "kotlin"
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "application"
group 'com.tencent.bk.devops'

repositories {
    def mavenRepoUrl = System.getProperty("mavenRepoUrl")
    if (mavenRepoUrl == null) {
        mavenRepoUrl = System.getenv("mavenRepoUrl")
    }
    if (mavenRepoUrl == null) {
        mavenRepoUrl = MAVEN_REPO_URL
    }
    println("all project mavenRepoUrl=" + mavenRepoUrl)

    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url mavenRepoUrl }
}

dependencies {
    compile "com.tencent.devops.ci-plugins:java-plugin-sdk:1.0.4"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    ktlint "com.github.shyiko:ktlint:0.34.2"
    compile group: 'com.squareup.okhttp3', name: 'okhttp'
    compile "org.bouncycastle:bcprov-jdk16:$bouncyCastleVersion"
    compile "org.apache.commons:commons-exec:$commonExecVersion"
    compile "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion"
    compile "org.eclipse.jgit:org.eclipse.jgit:5.0.2.201807311906-r"
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

// 固定入口类 不要改
mainClassName = "com.tencent.bk.devops.atom.AtomRunner"

shadowJar {
    // baseName为插件默认打包名+".jar"，bkdevops-plugin.jar
    // 如果修改，则要一同修改插件task.json中的target启动命令
    // 为了省事，建议不用修改
    baseName = "git"
    classifier = null
    zip64 true
}

task buildZip(type: Zip, dependsOn: shadowJar) {
    from "build/libs", "./task.json"
    into "${project.name}"
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "src/**/*.kt"
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "-F", "src/**/*.kt"
}
