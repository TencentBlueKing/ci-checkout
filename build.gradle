/*
 * Tencent is pleased to support the open source community by making BK-CI 蓝鲸持续集成平台 available.
 *
 * Copyright (C) 2019 THL A29 Limited, a Tencent company.  All rights reserved.
 *
 * BK-CI 蓝鲸持续集成平台 is licensed under the MIT license.
 *
 * A copy of the MIT License is included in this file.
 *
 *
 * Terms of the MIT License:
 * ---------------------------------------------------
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
 * documentation files (the "Software"), to deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of
 * the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
 * LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
 * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

buildscript {
    def mavenRepoUrl = System.getProperty("mavenRepoUrl")
    if (mavenRepoUrl == null) {
        mavenRepoUrl = System.getenv("mavenRepoUrl")
    }
    if (mavenRepoUrl == null) {
        mavenRepoUrl = MAVEN_REPO_URL
    }

    repositories {
        mavenLocal()
        maven { url mavenRepoUrl }
        mavenCentral()
        gradlePluginPortal()
    }

    ext {
        kotlinVersion = "1.6.0"
        bouncyCastleVersion = "1.46"
        commonExecVersion = "1.3"
    }

    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:5.2.0"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
    }
}


subprojects {
    apply plugin: "kotlin"
    apply plugin: "application"
    group 'com.tencent.bk.devops.git'
    version '1.0.18'
    def coreVersion = System.getProperty("core_version")
    if (coreVersion != null) {
        version = coreVersion
    }
    def snapshot = System.getProperty("snapshot")
    if (snapshot == "true") {
        version = version + "-SNAPSHOT"
    } else {
        version = version
    }

    configurations {
        ktlint
    }

    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }

    def mavenRepoUrl = System.getProperty("mavenRepoUrl")
    if (mavenRepoUrl == null) {
        mavenRepoUrl = System.getenv("mavenRepoUrl")
    }
    if (mavenRepoUrl == null) {
        mavenRepoUrl = MAVEN_REPO_URL
    }

    repositories {
        mavenLocal()
        maven { url mavenRepoUrl }
        mavenCentral()
        jcenter()
    }

    task ktlint(type: JavaExec, group: "verification") {
        description = "Check Kotlin code style."
        classpath = configurations.ktlint
        main = "com.pinterest.ktlint.Main"
        args "src/**/*.kt"
    }
    check.dependsOn ktlint

    task ktlintFormat(type: JavaExec, group: "formatting") {
        description = "Fix Kotlin code style deviations."
        classpath = configurations.ktlint
        main = "com.pinterest.ktlint.Main"
        args "-F", "src/**/*.kt"
    }

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
        ktlint "com.github.shyiko:ktlint:0.34.2"
        testCompile group: 'junit', name: 'junit', version: '4.12'
    }

    jar {
        manifest {
            attributes(
                    "Specification-Version" : "$project.version",
                    "Implementation-Version": System.getenv("BK_CI_BUILD_NO") ?: ""
            )
        }
    }
}
